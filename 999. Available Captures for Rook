class Solution {
public:

int check(int row,int col,vector<vector<char>>& board)
{
    int c=0;
    //up
    for(int i=row-1;i>=0;i--)
    {
        if(board[i][col]=='p') 
        {
            c++;
            break;
        }
        else if(board[i][col]=='B') break;
        else if(board[i][col]=='.') continue;
    }

    //down
    for(int i=row+1;i<board.size();i++)
    {
        if(board[i][col]=='p') 
        {
            c++;
            break;
        }
        else if(board[i][col]=='B') break;
        else continue;

    }

    //left
    for(int i=col-1;i>=0;i--)
    {
        if(board[row][i]=='p') 
        {
            c++;
            break;
        }
        else if(board[row][i]=='B') break;
        else continue;
    }
    //right
    for(int i=col+1;i<board[0].size();i++)
    {
        if(board[row][i]=='p') 
        {
            c++;
            break;
        }
        else if(board[row][i]=='B') break;
        else continue;
    }
    return c;
}
    int numRookCaptures(vector<vector<char>>& board) {
        
        int x;
        int y;
        for(int i=0;i<8;i++)
        {
            for(int j=0;j<8;j++)
            {
                if(board[i][j]=='R')
                {
                    x=i;
                    y=j;
                    break;
                }
            }
        }
        int c=check(x,y,board);
        return c;
    }
};
