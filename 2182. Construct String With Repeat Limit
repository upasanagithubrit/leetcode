class Solution {
public:
    string repeatLimitedString(string s, int repeatLimit) {
        vector<int> freq(26,0);
        for(char i:s)
        {
            freq[i-'a']++;
        }

        priority_queue<int>pq;
        for(int i=0;i<26;i++)
        {
            if(freq[i]>0)
               pq.push(i+'a');
        }
        string ans;
        while(!pq.empty())
        {
            char ch=pq.top();
            pq.pop();

            int fre=min(freq[ch-'a'],repeatLimit);
            ans.append(fre,ch);

            freq[ch-'a']-=fre;

            if(freq[ch-'a']>0 && !pq.empty())
            {
                char nextch=pq.top();
                pq.pop();

                ans.push_back(nextch);

                freq[nextch-'a']--;
                if(freq[nextch-'a']>0)
                   pq.push(nextch);

               pq.push(ch);    
            }

        }
        return ans;
    }
};
