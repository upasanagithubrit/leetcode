class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& pre) {
       unordered_map<int,vector<int>> adj;
        for(auto& i: pre)
        {
            adj[i[1]].push_back(i[0]);

        }
        
        vector<int>indegree(numCourses,0);
        for(int i=0;i<numCourses;i++)
            {
            for(auto& v:adj[i])
                indegree[v]++;
            }
        
        queue<int>q;
        for(int i=0;i<numCourses;i++)
            {
            if(indegree[i]==0)
                q.push(i);
            }
        
        int count=0;
        while(!q.empty())
            {
            int u=q.front();
            q.pop();
            count++;
            
            for(auto& v:adj[u])
                {
                indegree[v]--;
                if(indegree[v]==0)
                    {
                    q.push(v);
                    
                    }
                }
            
            }
        if(count==numCourses)
            return true;
        else 
            return false;
        
    }
};
