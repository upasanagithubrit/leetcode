class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        long long sum=0;
        long long curr=0;
        int n=nums.size();
        int i=0;
        int j=0;
        unordered_map<int,int>mp;
        while(j<n)
        {
            curr+=nums[j];
            mp[nums[j]]++;
            while(mp[nums[j]]!=1)
            {
                curr-=nums[i];
                mp[nums[i]]--;
                i++;
            }
            while((j-i+1)>k)
            {
                curr-=nums[i];
                mp[nums[i]]--;
                i++;

            }
            if((j-i+1)==k)
                 sum=max(sum,curr);
           j++;
        }
        return sum;
    }

};
