class Solution {
public:
    void warshall(  vector<char>& original, vector<char>& changed, vector<vector<long long>>& costmatrix,vector<int>&cost)
        {
        
        for(int i=0;i<original.size();i++)
            {
            costmatrix[original[i]-'a'][changed[i]-'a']=min(costmatrix[original[i]-'a'][changed[i]-'a'],(long long)cost[i]);
            }
        
        
        // apply warshall
        
        
        for(int via=0;via<26;via++)
            {for(int i=0;i<26;i++)
                {
                for(int j=0;j<26;j++)
                    {
                    costmatrix[i][j]=min(costmatrix[i][j],(costmatrix[i][via]+costmatrix[via][j]));
                    }
                }
             }
        return ;
        }
    long long minimumCost(string source, string target, vector<char>& original, vector<char>& changed, vector<int>& cost) {
     vector<vector<long long>>costmatrix(26,vector<long long>(26,INT_MAX));
        
        
        warshall(original,changed,costmatrix,cost);
         long long ans=0;
        for(int i=0;i<source.length();i++)
            {
            if(source[i]==target[i])
                continue;
            
            if(costmatrix[source[i]-'a'][target[i]-'a']==INT_MAX)
                return -1;
            
            ans+= costmatrix[source[i]-'a'][target[i]-'a'];
            }
        return ans;
        
        
        
    }
};
